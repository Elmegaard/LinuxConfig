"execute pathogen#infect()
"set nocompatible              " be iMproved, required
"filetype off                  " required

call plug#begin('~/.vim/plugged')

" Plugins
" latex
Plug 'LaTeX-Box-Team/LaTeX-Box'

Plug 'ervandew/supertab'
Plug 'terryma/vim-multiple-cursors'
Plug 'Valloric/YouCompleteMe', { 'do': 'python2.7 install.py' }
Plug 'Valloric/ycmd'
Plug 'tpope/vim-surround'
Plug 'kien/ctrlp.vim'
Plug 'bling/vim-airline'
Plug 'scrooloose/nerdcommenter'
Plug 'Lokaltog/vim-easymotion'
Plug 'pangloss/vim-javascript'
Plug 'godlygeek/tabular'
Plug 'Raimondi/delimitMate'
Plug 'tpope/vim-endwise'
Plug 'mattn/emmet-vim'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'FredKSchott/CoVim'
Plug 'majutsushi/tagbar'
Plug 'benekastah/neomake'
Plug 'kassio/neoterm'

" color
Plug 'junegunn/seoul256.vim'

call plug#end()            " required

" Vim
set noswapfile

" LaTeX
let g:LatexBox_latexmk_options = "-pvc -pdfps"
let g:LatexBox_latexmk_async=1
let g:LatexBox_latexmk_preview_continuously=1

" Vim-LaTeX config:
filetype plugin indent on
set grepprg=grep\ -nH\ $*
let g:tex_flavor = "latex"

" Allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! w !sudo tee > /dev/null % 
cmap x!! x !sudo tee > /dev/null %
vnoremap <C-c> "*y
vnoremap <C-v> "+p

" Syntax
syntax on
set backspace=indent,eol,start

" Line numbers
set number
set numberwidth=2
set cpoptions+=n
highlight LineNr term=bold cterm=NONE ctermfg=DarkGrey ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE

" Special Characters
set encoding=utf-8
"set dg

" Tabbing
set tabstop=4
set shiftwidth=4
set expandtab

" Multiple Cursors
let g:multi_cursor_use_default_mapping=0
let g:multi_cursor_next_key='<C-n>'
let g:multi_cursor_prev_key='<C-p>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<Esc>'

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Airline
set laststatus=2
let g:airline_powerline_fonts = 1

" Map leader and localleader key
let mapleader = "\<Space>"
let g:mapleader = "\<Space>"
let maplocalleader = "\<Space>"
let g:maplocalleader = "\<Space>"

" NERDtree
map <leader>b :NERDTreeToggle<CR>
let g:NERDTreeDirArrows=0

" easymotion
map \ <Plug>(easymotion-prefix)

" color
" Unified color scheme (default: dark)
let g:seoul256_background = 233
colo seoul256

"CoVim
let CoVim_default_name = "Elmegaard"
let CoVim_default_port = "1337"  

" YouCompleteMe
" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" UltiSnips
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"
let g:UltiSnipsEditSplit="vertical"

" Tagbar binds
map <leader>t :TagbarToggle<CR>

" Buffer binds
map <C-h> :bp<CR>
map <C-l> :bn<CR>

function! NeoFunc(...)
  silent :let g:neomake_open_list = 0
  :Neomake
endfunction
  

" Toggle neomake open list
autocmd! BufWritePost * call NeoFunc()
let g:neomake_open_list = 0

nnoremap <Leader>nt :let g:neomake_open_list = 1<CR>:Neomake<CR>
nnoremap <Leader>nm :let g:neomake_open_list = 1<CR>:Neomake!<CR>
nnoremap <Leader>m :T make<CR>
nnoremap <Leader>bt :call neoterm#close()<CR>
